package za.co.afrikatek.brokingservice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClassOfBusinessAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassOfBusinessAllPropertiesEquals(ClassOfBusiness expected, ClassOfBusiness actual) {
        assertClassOfBusinessAutoGeneratedPropertiesEquals(expected, actual);
        assertClassOfBusinessAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassOfBusinessAllUpdatablePropertiesEquals(ClassOfBusiness expected, ClassOfBusiness actual) {
        assertClassOfBusinessUpdatableFieldsEquals(expected, actual);
        assertClassOfBusinessUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassOfBusinessAutoGeneratedPropertiesEquals(ClassOfBusiness expected, ClassOfBusiness actual) {
        assertThat(expected)
            .as("Verify ClassOfBusiness auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassOfBusinessUpdatableFieldsEquals(ClassOfBusiness expected, ClassOfBusiness actual) {
        assertThat(expected)
            .as("Verify ClassOfBusiness relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassOfBusinessUpdatableRelationshipsEquals(ClassOfBusiness expected, ClassOfBusiness actual) {
        assertThat(expected)
            .as("Verify ClassOfBusiness relationships")
            .satisfies(e -> assertThat(e.getInsuranceType()).as("check insuranceType").isEqualTo(actual.getInsuranceType()));
    }
}
